<section xml:id="VDG-Cookbook-Create-Disks-with-Backing-Images"
	 xmlns="http://docbook.org/ns/docbook"
	 xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Creating Disks with Backing Images</title>

  <para>
    A few years ago I found out about <firstterm>backing
    images</firstterm> (or <quote>base-images</quote>)<footnoteref
    linkend="VDG-Cookbook-create-disks-with-backing-images-foornote01"/>. Back
    then I was doing lots of development on host provisioning tools
    and needed to be able to quickly revert machines I was working on
    to a desired initial state. In this use case backing images were
    especially handy when working on features that frequently
    destroyed the machine if it didn't work right.
  </para>

  <remark>TODO: Link to snapshot section</remark>

  <para>
    Snapshots were an option, but how they worked wasn't documented
    very well at the time. I went with backing images instead, as they
    worked perfectly for what I needed to them do. I could work
    iteratively and <firstterm>commit</firstterm> changes in the COW
    image

    <footnote><para> In this section when we refer to a
    <firstterm>COW</firstterm> image it is not apropos the COW
    (<firstterm>copy-on-write</firstterm>) disk format. Saying COW
    only serves to help make a distinction between the read-only
    base-image and the image that changes are copied to on
    writing.</para></footnote>

    (copy-on-write) back to the base-image

    <footnote
    xml:id="VDG-Cookbook-create-disks-with-backing-images-foornote01"><para>The
    terms <quote>base-image</quote> and <quote>backing image</quote>
    are used interchangeably</para></footnote>

    when I was satisfied. I also could use the same base-image for
    multiple COWs at once. This meant that other people on my team
    working on the same project could all use the same base-image.
  </para>

  <remark>TODO: Maybe create an analogy relating base image workflow
  with version control</remark>


  <example xml:id="VDG-Cookbook-Example-Create-Disk-with-a-Backing-Image">
    <title>Creating a Disk with a Backing Image</title>

    <screen><xi:include href="../examples/cookbook-create-disk-with-a-backing-image01" parse="text"/></screen>
  </example>

  <procedure xml:id="VDG-Cookbook-Steps-Create-Disk-with-a-Backing-Image">
    <title>Steps in Detail</title>

    <step>
      <para>
	I consider it bad practice to a bunch of bunch of disk images
	in a directory so we made two directories here. <filename
	class="directory">/srv/images/base-images/</filename> to hold
	all the base-images on this system and <filename
	class="directory">/srv/images/webserver01</filename> to later
	hold the disk assigned to the virtual machine.
      </para>
    </step>

    <step>
      <para>
	Next we go into the base images directory and create a small
	10G image, type: QCOW2.
      </para>
    </step>

    <step>
      <para>
	Normally what we used to do at this point is create a virtual
	machine that uses this disk for it's primary drive. It would
	get a base OS provisioned on it and any other tweaks we needed
	there each time it was wiped.
      </para>
    </step>

    <step>
      <para>
	Once the machine was what we wanted in a <quote>Golden
	Master</quote> it was shutdown and the backing image would be
	made read-only.
      </para>
    </step>

    <step>
      <para>
	The next step was creating the copy-on-write (COW) image. See
	how in the example we give the <option>-b</option> option with
	the <emphasis>full path</emphasis> to the
	base-image<footnote><para>Some versions of
	<command>qemu-img</command> can not handle
	<firstterm>relative</firstterm> paths)</para></footnote>? Also
	note that no size is given after the file name. Size is
	implicitly the size of the disks backing image.
      </para>
    </step>

    <step>
      <para>
	With the image preparation complete we would modify the
	virtual machines configuration and set its primary disk drive
	to the COW in the webserver01 directory.
      </para>
    </step>
  </procedure>
</section>
