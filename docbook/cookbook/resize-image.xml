<section xml:id="VDG-Cookbook-Resize-Image"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xl="http://www.w3.org/1999/xlink"
         version="5.0">

  <title>Resizing Disk Images</title>

  <para>
    In this section we'll resize two different disk images. One is a
    RAW image, the other is a QCOW2 image. The RAW section is more
    involved in that we'll do all of the resizing operations
    <emphasis>outside</emphasis> of a virtual machine. In the QCOW2
    section I'll show the (simpler) steps which take place both
    outside and inside of a virtual machine.
  </para>

  <section xml:id="VDG-Cookbook-Resize-Image-RAW">
    <title>Resizing RAW Images</title>

    <para>
      In this part we'll add 2GiB to a disk image I created of a 1GiB
      USB thumb drive

      <footnote>
        <para>
          See <xref linkend="VDG-Advanced-Cloning-A-Physical-Disk"/> for
          instructions on how to do this yourself.
        </para>
      </footnote>

      . The thumb drive has two roughly equal sized partitions, both
      are <systemitem class="filesystem">EXT4</systemitem>.
    </para>

    <para>
      At the end of this section we'll have done the following:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          Enlarged the disk by 2GiB with <command>qemu-img</command>
        </para>
      </listitem>

      <listitem>
        <para>
          Shifted the the second partition 1024MiB right into the new
          space with <application>GParted</application>
        </para>
      </listitem>

      <listitem>
        <para>
          Enlarged the first partition by about 1GiB with <application>GParted</application>
        </para>
      </listitem>

      <listitem>
        <para>
          Resized the first filesystem to use the new space on its
          partition with <command>resize2fs</command>
        </para>
      </listitem>
    </itemizedlist>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image01">
      <title>
        Resize a <filename class="extension">RAW</filename> Image
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image01" parse="text"/></screen>
    </example>

    <para>
      Use <command>kpartx</command> to automatically create a loop
      device for the resized image and device maps to the
      partitions. The <option>-a</option> option means we're adding
      partition mappings and the <option>-v</option> option means to do
      it with increased verbosity so we know the names of the created
      devices.
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image02">
      <title>
        Create devices with <command>kpartx</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image02" parse="text"/></screen>
    </example>


    <para>
      I'm going to use <command>gparted</command> to resize the
      partitions in the disk image. There's two important things to keep
      in mind:
    </para>


    <orderedlist>
      <listitem>
        <para>
          <command>gparted</command> expects to find the <filename
          class="partition">loop0p[12]</filename> devices in <filename
          class="directory">/dev/</filename>, not <filename
          class="directory">/dev/mapper/</filename>
        </para>
      </listitem>
      <listitem>
        <para>
          <command>gparted</command> won't list loop devices in its
          device selection menu
        </para>
      </listitem>
    </orderedlist>

    <para>
      When we ran <command>kpartx</command> it created symbolic links
      <filename class="directory"></filename> to the new devices
      (<filename class="devicefile">/dev/dm-*</filename>) which map to
      the partitions on <filename
      class="devicefile">/dev/loop0</filename>. We can use this
      information to create the symlinks necessary for
      <command>gparted</command> to locate <filename
      class="partition">loop0p[12]</filename>.
    </para>


    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image03">
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image03" parse="text"/></screen>
    </informalexample>


    <para>
      Once the symlinks are created we can run
      <command>gparted</command> from the command line with <filename
      class="devicefile">/dev/loop0</filename> as the device argument.
    </para>

    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image04">
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image04" parse="text"/></screen>
    </informalexample>

    <para>
      <application>GParted</application> should open now and show the
      two existing partitions, as well as the 2GiB of unallocated space
      we just added to the image:
    </para>

    <!-- #################### BEGIN GPARTED SCREENSHOTS #################### -->

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize01.png">
      <title>Welcome to <application>GParted</application></title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize01.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      Right click the second partition, <filename
      class="partition">loop0p2</filename>, and select the
      <guimenuitem>Resize/Move</guimenuitem> option:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize02">
      <title>
        Resize/Move <filename class="partition">loop0p2</filename>
      </title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize02.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      We're not going to resize the second partition. We just want to
      make room for the first partition to expand into. Enter
      <literal>1024</literal> into the <guilabel>Free space preceding
      (MiB)</guilabel> box. That will move this partiton to the right
      far enough to leave the first partition enough room to expand to
      1024 MiB. Also, in the <guilabel>Align to</guilabel> drop-down
      menu select <guimenuitem>Cylinder</guimenuitem>

      <footnote>
        <para>
          On aligning Partitions: <xref
          linkend="VDG-Appendix-Disk-Drive-History-Master-Boot-Record"/>
        </para>
      </footnote>

      :
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize03">
      <title>Moving <filename class="partition">loop0p2</filename></title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize03.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      <application>GParted</application> will now show 1 operation
      pending:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize04">
      <title>Pending move operation</title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize04.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      Now right click the first partition and select
      <guimenuitem>Resize/Move</guimenuitem> like we did with the second
      partition. We'll make the first partition use the free space
      preceding the second partition by setting the <guilabel>Free space
      following (MiB)</guilabel> input box to
      <literal>0</literal>. Again, in the <guilabel>Align to</guilabel>
      drop-down menu select <guimenuitem>Cylinder</guimenuitem>:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize05">
      <title>Resize <filename class="partition">loop0p1</filename></title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize05.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      There is a summary of the two pending actions below the partition
      table. Click the Green Checkmark button to apply the changes:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize06">
      <title>Apply the changes</title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize06.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      After you click apply you'll get this confirmation dialog:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize07">
      <title>Scary warning!</title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize07.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      Once you click apply again this window will show the progress:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize08">
      <title>Progress happening</title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize08.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      You should see this screen if there were no errors:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize09">
      <title>No errors!</title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="315pt" fileref="../../images/resize/resize09.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      All done! Click Close to return to the main
      <application>GParted</application> screen:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize10">
      <title><application>GParted</application> has resized our partitions</title>
      <mediaobject>
        <imageobject>
          <imagedata contentwidth="435pt" fileref="../../images/resize/resize10.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <!-- #################### END GPARTED SCREENSHOTS #################### -->

    <para>
      But wait, what's this on the last screen here?
      <command>gparted</command> says <filename
      class="partition">loop0p1</filename> is using 1.02GiB of
      1.47GiB. That can't be right. Before resizing the partition
      <command>gparted</command> said <filename
      class="partition">loop0p1</filename> was only using 25.54MiB out
      of 482.56MiB. Lets take a look at it on the command line:
    </para>


    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image05">
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image05" parse="text"/></screen>
    </informalexample>


    <para>
      All of that is incorrect too, as if nothing we did in
      <command>gparted</command> had an effect. What's going on here?
    </para>

    <para>
      After the partitions were resized the partition table was updated
      with the new information but we never updated the device maps in
      the kernel. The <command>kpartx</command> command also accepts a
      <option>-u</option> option to update partitions mappings, lets try
      that and see if it fixes our problem:
    </para>


    <remark>This step may not be actually necessary</remark>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image06">
      <title>
        Create device maps with <command>kpartx</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image06" parse="text"/></screen>
    </example>



    <!-- # 3082432 = sectors, 2048 = offset -->


    <!-- Compare to before: -->

    <!-- [root@deepfryer ~]# kpartx -av /dev/loop0 -->
    <!-- add map loop0p1 (253:8): 0 988282 linear /dev/loop0 2048 -->
    <!-- add map loop0p2 (253:9): 0 986329 linear /dev/loop0 991232 -->


    <!-- # Put the above information into a table ^^ -->
    <!-- # -->
    <!-- #             | Original | After Update | -->
    <!-- # device      |          |              | -->
    <!-- # major:minor |          |              | -->
    <!-- # size        |          |              | -->
    <!-- # offset      |          |              | -->


    <para>
      The partition sizes and offsets reflect the changes we made, but
      mounting the first partition still doesn't show the added
      capacity:
    </para>

    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image07">
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image07" parse="text"/></screen>
    </informalexample>


    <para>
      We've already resized the partition, but we haven't resized the
      <emphasis>filesystem</emphasis> on the partition. That's the last
      thing we have to do to finish this whole resizing operation. We'll
      use the <command>resize2fs</command> command and let it
      automatically resize the filesystem to fill the available space on
      the <filename class="partition">/dev/loop0p1</filename> partition.
    </para>


    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image08">
      <title>
        Resize the filesystem with <command>resize2fs</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image08" parse="text"/></screen>
    </example>



    <para>
      Don't forget to clean up those lingering symlinks we made earlier:
    </para>

    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image09">
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image09" parse="text"/></screen>
    </informalexample>


    <note>
      <para>
        The <command>resize2fs</command> command can also shrink
        partitions, print the minimum possible size, and a couple other
        things. Check <command>man 8 resize2fs</command> for more
        information.
      </para>
    </note>
  </section>


  <section xml:id="VDG-Cookbook-Resize-Image-QCOW2">
    <title>Resizing QCOW2 Images</title>

    <para>
      In this section we'll resize a QCOW2 image, making it 5GB
      larger. This process will differ from the RAW image resizing
      section in that we'll do some operations outside of the virtual
      machine and some operations inside of the virtual machine.
    </para>

    <remark>TODO: Link to VDG-Cookbook-Resize-Image-RAW</remark>

    <para>
      The virtual machine we'll be working with is called
      <literal>f18</literal>, which is running <systemitem
      class="osname">Fedora Linux</systemitem> and has no LVM managed
      partitions. The disk image for this virtual machine is located
      at <filename
      class="devicefile">/var/lib/libvirt/images/f18.qcow2</filename>,
      and the root partition is <filename
      class="partition">vda3</filename>.
    </para>

    <para>
      Outside of the virtual machine the disk looks like this:
    </para>

    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image01">
      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image01" parse="text"/></screen>
    </informalexample>

    <para>
      Inside of the virtual machine the disk and root partition look
      like this:
    </para>

    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image03">
      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image03" parse="text"/></screen>
    </informalexample>

    <warning>
      <para>
        Before we begin: make sure you shutdown any virtual machines
        the disk might be attached to! For example:
        <computeroutput>virsh shutdown f18</computeroutput>
      </para>
    </warning>

    <remark>TODO: Link to section which handles resizing LVM managed partitions</remark>

    <para>
      Once the virtual machine is shutdown the process for resizing
      QCOW2 images starts similar to the process for resizing RAW
      images. Use the <command>qemu-img</command>
      <command>resize</command> subcommand, specify the disk to
      operate on (<filename>f18.qcow2</filename>), and how much to
      increase the size by (<literal>+5G</literal>):
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image02">
      <title>
        Resize a <filename class="extension">QCOW2</filename> Image
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image02" parse="text"/></screen>
    </example>

    <para>
      Once you've resized the disk image you can turn the virtual
      machine back on, for example: <computeroutput>virsh start
      f18</computeroutput>
    </para>

    <important>
      <para>
	The following steps happen <emphasis>inside</emphasis> of the
	running virtual machine.
      </para>
    </important>

    <para>
      Once the machine is back online we can resize the partition with
      the <command>fdisk</command> command. Technical note here: when
      we <quote>resize</quote> the partiton with
      <command>fdisk</command> what we're
      <emphasis>actually</emphasis> doing is deleting the partition
      and then re-creating it starting at the same position.
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image04">
      <title>
	Resize <filename class="devicefile">/dev/vda</filename> with
	<command>parted</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image04" parse="text"/></screen>
    </example>

    <note>
      <para>
	In the above example we use the defaults for some of the new
	partition creation prompts. The defaults work out to selecting
	the first and last available cylnders, respectively.
      </para>
    </note>

    <para>
      Restart the virtual machine again. Now we can see the partition
      size has increased from 7.6G to 13.6GB:
    </para>

    <informalexample xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image05">
      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image05" parse="text"/></screen>
    </informalexample>

    <para>
      Just like when we resized the filesystem on the RAW disk image
      we'll use the <command>resize2fs</command> command inside the
      QCOW2 image. The root partition, <filename
      class="partition">/dev/vda3</filename>, is the last partition on the
      disk and is followed by free space which we'll grow it into:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image06">
      <title>
	Grow the filesystem on <filename class="partition">/dev/vda3</filename>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image06" parse="text"/></screen>
    </example>
  </section>
</section>
