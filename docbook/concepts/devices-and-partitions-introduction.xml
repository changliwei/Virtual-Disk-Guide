<section xml:id="VDG-Concepts-Devices-and-Partitions-Introduction"
	 xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Introduction</title>

  <para>
    After using <command>parted</command>
    <filename>disk1.raw</filename> has a partition table, but does
    that mean we can create partitions on it now? Let's run
    <command>fdisk</command> on <filename>disk1.raw</filename>.
  </para>

  <screen><xi:include href="../examples/concepts-devices-and-partitions-introduction01" parse="text"/></screen>


  <remark>TODO: Maybe this next paragraph should be rejiggered. It's
  not so much that it's too difficult to calculate, but rather, it's
  because the virtual disk has no actual physical properties.</remark>

  <remark>Or, just explain that it's impractical and
  unnecessary. Provide as a reference in the appendix.</remark>

  <!-- <para> -->
  <!--   To calculate how many cylinders to specify you could work -->
  <!--   backwards from <xref linkend="VDG-Concepts-Capacity-Equation"/>, -->
  <!--   but the number of unknowns at this time make it prohibitively -->
  <!--   difficult for us to work out. It's provided in this document as a -->
  <!--   general informative reference. -->
  <!-- </para> -->

  <!-- <equation xml:id="VDG-Concepts-Capacity-Equation"> -->
  <!--   <title>Total Capacity of a Disk</title> -->

  <!--   <mathphrase> -->
  <!--     Disk Capacity = (cylinders/disk) * (heads/cylinder) * -->
  <!--     (tracks/head) * (sectors/track) * (bytes/sector) -->
  <!--   </mathphrase> -->
  <!-- </equation> -->

  <para>
    A much simpler way to create partitions (still using
    <command>fdisk</command>) is by accessing the file as if it were
    an actual device. Doing this requires creating loop devices.
  </para>

  <para>
    Instead of using <command>fdisk</command> on
    <filename>disk1.raw</filename> directly, we'll create a loop
    device and associate <filename>disk1.raw</filename> with it. From
    here on we'll be accessing our virtual drives through loop
    devices.
  </para>

  <para>
    Why are we doing this? And what is a loop device?
  </para>

  <para>
    Unfortunately for <filename>disk1.raw</filename>, it will never be
    anything more than just a file. The operating system just doesn't
    have interfaces for block operations against files. As the kernel
    creates the block special device <systemitem
    class="resource">/dev/sda</systemitem> to represent my hard drive,
    we need to create a block special device to represent our virtual
    disk. This is called a loop device. You can think of a loop
    device, e.g., <systemitem
    class="resource">/dev/loop1</systemitem>, like a translator.
  </para>

  <para>
    With a loop device inserted between programs and our disk image we
    can view and operate on the disk image as if it were a regular
    drive. When accessed through a loop device
    <command>fdisk</command> can properly determine the number of
    cylinders, heads, and everything else required to create
    partitions.
  </para>
</section>
